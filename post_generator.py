import re
from post_image import make_cover
from chatgpt import generate_post

def generate_post_text(course_info):
    """–ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç —Ç–µ–∫—Å—Ç –ø–æ—Å—Ç–∞ —Å –ø–æ–º–æ—â—å—é ChatGPT."""
    post_text = generate_post(course_info)
    if not post_text:
        raise ValueError("–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –ø–æ—Å—Ç –æ—Ç ChatGPT (post_text == None)")
    post_text = post_text.replace("```", "")
    return post_text

def extract_title_and_subtitle(post_text):
    """–ò–∑–≤–ª–µ–∫–∞–µ—Ç –∑–∞–≥–æ–ª–æ–≤–æ–∫ –∏ –ø–æ–¥–∑–∞–≥–æ–ª–æ–≤–æ–∫ –∏–∑ —Ç–µ–∫—Å—Ç–∞ –ø–æ—Å—Ç–∞."""
    lines = post_text.split('\n')
    title_text = None
    subtitle_text = None
    title_pattern = re.compile(r'<b>(.*?)</b>', re.IGNORECASE)
    for i, line in enumerate(lines):
        match = title_pattern.search(line)
        if match:
            title_text = match.group(1).strip()
            if i + 1 < len(lines):
                next_line = lines[i+1].strip()
                if next_line and not next_line.startswith(('üóì', '‚è∞', 'üîπ', '‚ô¶Ô∏è', '<a')):
                    subtitle_text = next_line
            break
    if title_text and len(title_text) > 30:
        words = title_text.split()
        title_text = " ".join(words[:3])
        subtitle_text = " ".join(words[3:]) if not subtitle_text else subtitle_text
    return title_text, subtitle_text

def generate_cover(poster_url, title_text, year_text, duration_text, subtitle_text):
    """–ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –æ–±–ª–æ–∂–∫—É –¥–ª—è –ø–æ—Å—Ç–∞."""
    cover_image = make_cover(
        poster_url,
        title_text or "–ë–µ–∑ –Ω–∞–∑–≤–∞–Ω–∏—è",
        year_text,
        duration_text,
        subtitle_text
    )
    if not cover_image:
        raise ValueError("make_cover –≤–µ—Ä–Ω—É–ª–∞ None –∏–ª–∏ –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –æ–±–ª–æ–∂–∫–∏.")
    return cover_image